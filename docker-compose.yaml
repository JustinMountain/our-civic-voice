version: '3.8'
services:
  nginx: 
    container_name: ocv-nginx
    build: ./nginx
    restart: unless-stopped
    ports:
      - 80:80
    networks:
      - ocv-network

  frontend:
    container_name: ocv-frontend
    build: ./frontend
    restart: unless-stopped
    depends_on:
      - nginx
      - backend-express
    volumes: 
      - ./frontend/:/usr/app/
    networks:
      - ocv-network

  database:
    container_name: ocv-postgres
    image: postgres:16.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${PG_USERNAME}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    volumes: 
      - ocv-postgres:/var/lib/postgresql/data
      - ./database/sql/ddl/:/docker-entrypoint-initdb.d/
    networks:
      - ocv-network

  pgadmin4:
    image: dpage/pgadmin4:8.1
    container_name: ocv-pgadmin4
    restart: always
    ports:
      - '8888:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    volumes:
      - civic-voice-pgadmin4:/var/lib/pgadmin
    networks:
      - ocv-network

  data-pipeline:
    container_name: ocv-data-pipeline
    restart: unless-stopped
    build: ./data-pipeline
    depends_on:
      - database
    environment:
      # DB container_name used for the database connection in /data-pipeline/config/databasePool.ts
      - DB_HOST=database
    volumes: 
      - ./data-pipeline/:/usr/app/
    networks:
      - ocv-network

  backend-express:
    container_name: ocv-backend-express
    restart: unless-stopped
    build: ./express
    depends_on:
      - database
    environment:
      # DB container_name used for the database connection in /data-pipeline/config/databasePool.ts
      - DB_HOST=database
    volumes: 
      - ./express/:/usr/app/
    networks:
      - ocv-network

networks:
  ocv-network:
volumes:
  ocv-postgres:
  civic-voice-pgadmin4:
